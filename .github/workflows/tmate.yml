name: Create VPS with OpenVPN + Playit

on:
  workflow_dispatch:
  repository_dispatch:
    types: [create-vps]

jobs:
  start-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    env:
      TMATE_SERVER: nyc1.tmate.io

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v3

      - name: 📁 Prepare dirs
        run: mkdir -p links .backup ovpn

      - name: 🔐 Install tmate
        run: |
          sudo apt update -y && sudo apt install -y tmate
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          tmate -S /tmp/tmate.sock new-window -n shell "bash"
          SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          echo "$SSH" | tee "links/session.txt"
          echo "🔗 Tmate SSH: $SSH"

      - name: 🚀 Install OpenVPN server
        run: |
          wget https://git.io/vpn -O openvpn-install.sh
          chmod +x openvpn-install.sh
          AUTO_INSTALL=y ./openvpn-install.sh <<EOF
          client
          EOF

      - name: 🧾 Extract OpenVPN client config
        run: |
          sudo cp /root/client.ovpn ./ovpn/client.ovpn

      - name: 🚀 Start Playit Tunnel
        run: |
          wget -q https://github.com/playit-cloud/playit-agent/releases/latest/download/playit-linux-amd64 -O playit
          chmod +x playit
          nohup ./playit > playit.log 2>&1 &
          sleep 5
          echo "✅ Playit started."

      - name: 🧪 Wait for playit to init & edit OVPN
        run: |
          HOST=$(grep -m 1 "playit.gg" playit.log | grep -oP 'playit\.gg:\d+')
          if [ -z "$HOST" ]; then
            echo "❌ Failed to detect Playit public tunnel"
            exit 1
          fi
          echo "🌍 Public Host: $HOST"
          sed -i "s/^remote .*/remote ${HOST//:/ }/" ./ovpn/client.ovpn
          echo "$HOST" > ovpn/host.txt

      - name: 🌐 Host .ovpn for download
        run: |
          cd ovpn
          python3 -m http.server 8080 &
          echo "📥 OVPN URL: http://localhost:8080/client.ovpn"

      - name: 📤 Save backup + push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔁 Updated VPN config + SSH link"
          file_pattern: 'links/*.txt ovpn/*.ovpn ovpn/*.txt .backup/*.zip'

      - name: ⏳ Keep alive
        run: |
          for i in $(seq 1 360); do
            echo "🟢 Minute $i/360..."
            sleep 60
          done

      - name: 🔁 Restart if finished
        if: always()
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
            -H "Content-Type: application/json" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type": "create-vps", "client_payload": {"vps_name": "vpn-vps", "backup": true}}'
